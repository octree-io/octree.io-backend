export const typeMappings = {
  python: {
    "int": "int",
    "float": "float",
    "bool": "bool",
    "char": "str",
    "string": "str",
    "void": "None",
    "int[]": "List[int]",
    "float[]": "List[float]",
    "bool[]": "List[bool]",
    "char[]": "List[str]",
    "string[]": "List[str]",
    "int[][]": "List[List[int]]",
    "float[][]": "List[List[float]]",
    "bool[][]": "List[List[bool]]",
    "char[][]": "List[List[str]]",
    "string[][]": "List[List[str]]",
    "ListNode": "ListNode",
    "TreeNode": "TreeNode",
    "GraphNode": "GraphNode"
  },
  java: {
    "int": "int",
    "long": "long",
    "float": "float",
    "double": "double",
    "bool": "boolean",
    "char": "char",
    "string": "String",
    "void": "void",
    "int[]": "int[]",
    "long[]": "long[]",
    "float[]": "float[]",
    "double[]": "double[]",
    "bool[]": "boolean[]",
    "char[]": "char[]",
    "string[]": "String[]",
    "int[][]": "int[][]",
    "long[][]": "long[][]",
    "float[][]": "float[][]",
    "double[][]": "double[][]",
    "bool[][]": "boolean[][]",
    "char[][]": "char[][]",
    "string[][]": "String[][]",
    "ListNode": "ListNode",
    "TreeNode": "TreeNode",
    "GraphNode": "GraphNode"
  },
  cpp: {
    "int": "int",
    "long": "long",
    "float": "float",
    "double": "double",
    "bool": "bool",
    "char": "char",
    "string": "std::string",
    "void": "void",
    "int[]": "std::vector<int>",
    "long[]": "std::vector<long>",
    "float[]": "std::vector<float>",
    "double[]": "std::vector<double>",
    "bool[]": "std::vector<bool>",
    "char[]": "std::vector<char>",
    "string[]": "std::vector<std::string>",
    "int[][]": "std::vector<std::vector<int>>",
    "long[][]": "std::vector<std::vector<long>>",
    "float[][]": "std::vector<std::vector<float>>",
    "double[][]": "std::vector<std::vector<double>>",
    "bool[][]": "std::vector<std::vector<bool>>",
    "char[][]": "std::vector<std::vector<char>>",
    "string[][]": "std::vector<std::vector<std::string>>",
    "ListNode": "ListNode*",
    "TreeNode": "TreeNode*",
    "GraphNode": "GraphNode*"
  },
  typescript: {
    "int": "number",
    "long": "number",
    "float": "number",
    "double": "number",
    "bool": "boolean",
    "char": "string",
    "string": "string",
    "void": "void",
    "int[]": "number[]",
    "long[]": "number[]",
    "float[]": "number[]",
    "double[]": "number[]",
    "bool[]": "boolean[]",
    "char[]": "string[]",
    "string[]": "string[]",
    "int[][]": "number[][]",
    "long[][]": "number[][]",
    "float[][]": "number[][]",
    "double[][]": "number[][]",
    "bool[][]": "boolean[][]",
    "char[][]": "string[][]",
    "string[][]": "string[][]",
    "ListNode": "ListNode",
    "TreeNode": "TreeNode",
    "GraphNode": "GraphNode"
  },
  ruby: {
    "int": "",
    "float": "",
    "bool": "",
    "char": "",
    "string": "",
    "void": "",
    "int[]": "",
    "float[]": "",
    "bool[]": "",
    "char[]": "",
    "string[]": "",
    "int[][]": "",
    "float[][]": "",
    "bool[][]": "",
    "char[][]": "",
    "string[][]": "",
    "ListNode": "ListNode",
    "TreeNode": "TreeNode",
    "GraphNode": "GraphNode"
  },
  go: {
    "int": "int",
    "long": "int64",
    "float": "float64",
    "double": "float64",
    "bool": "bool",
    "char": "byte",
    "string": "string",
    "void": "",
    "int[]": "[]int",
    "long[]": "[]int64",
    "float[]": "[]float64",
    "double[]": "[]float64",
    "bool[]": "[]bool",
    "char[]": "[]byte",
    "string[]": "[]string",
    "int[][]": "[][]int",
    "long[][]": "[][]int64",
    "float[][]": "[][]float64",
    "double[][]": "[][]float64",
    "bool[][]": "[][]bool",
    "char[][]": "[][]byte",
    "string[][]": "[][]string",
    "ListNode": "*ListNode",
    "TreeNode": "*TreeNode",
    "GraphNode": "*GraphNode"
  },
  rust: {
    "int": "i32",
    "long": "i64",
    "float": "f32",
    "double": "f64",
    "bool": "bool",
    "char": "char",
    "string": "String",
    "void": "()",
    "int[]": "Vec<i32>",
    "long[]": "Vec<i64>",
    "float[]": "Vec<f32>",
    "double[]": "Vec<f64>",
    "bool[]": "Vec<bool>",
    "char[]": "Vec<char>",
    "string[]": "Vec<String>",
    "int[][]": "Vec<Vec<i32>>",
    "long[][]": "Vec<Vec<i64>>",
    "float[][]": "Vec<Vec<f32>>",
    "double[][]": "Vec<Vec<f64>>",
    "bool[][]": "Vec<Vec<bool>>",
    "char[][]": "Vec<Vec<char>>",
    "string[][]": "Vec<Vec<String>>",
    "ListNode": "ListNode",
    "TreeNode": "TreeNode",
    "GraphNode": "GraphNode"
  },
  ocaml: {
    "int": "int",
    "long": "int64",
    "float": "float",
    "double": "float",
    "bool": "bool",
    "char": "char",
    "string": "string",
    "void": "unit",
    "int[]": "int list",
    "long[]": "int64 list",
    "float[]": "float list",
    "double[]": "float list",
    "bool[]": "bool list",
    "char[]": "char list",
    "string[]": "string list",
    "int[][]": "int list list",
    "long[][]": "int64 list list",
    "float[][]": "float list list",
    "double[][]": "float list list",
    "bool[][]": "bool list list",
    "char[][]": "char list list",
    "string[][]": "string list list",
    "ListNode": "listNode",
    "TreeNode": "treeNode",
    "GraphNode": "graphNode"
  },
  csharp: {
    "int": "int",
    "long": "long",
    "float": "float",
    "double": "double",
    "bool": "bool",
    "char": "char",
    "string": "string",
    "void": "void",
    "int[]": "List<int>",
    "long[]": "List<long>",
    "float[]": "List<float>",
    "double[]": "List<double>",
    "bool[]": "List<bool>",
    "char[]": "List<char>",
    "string[]": "List<string>",
    "int[][]": "List<List<int>>",
    "long[][]": "List<List<long>>",
    "float[][]": "List<List<float>>",
    "double[][]": "List<List<double>>",
    "bool[][]": "List<List<bool>>",
    "char[][]": "List<List<char>>",
    "string[][]": "List<List<string>>",
    "ListNode": "ListNode",
    "TreeNode": "TreeNode",
    "GraphNode": "GraphNode"
  }
};
